name: release
on:
  push:
    branches:
      - "release/**"
    tags:
      - "v*"
jobs:
  release:
    runs-on: ubuntu-latest
    env:
      GOPRIVATE: github.com/riposo
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Checkout CMD
        uses: actions/checkout@v2
        with:
          path: cmd
          repository: riposo/cmd
          token: ${{ secrets.PAT }}
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Contrainer Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PAT }}
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Grant private modules access
        run: |
          git config --global url."https://${{ secrets.PAT }}:x-oauth-basic@${{ env.GOPRIVATE }}".insteadOf "https://${{ env.GOPRIVATE }}"
      - name: Prepare build
        working-directory: cmd
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        run: |
          cp ../.goreleaser.yml ../Dockerfile .
          go mod init github.com/riposo/cmd
          ./bundle.sh accounts,default-bucket,flush
          echo "replace github.com/riposo/riposo => ../" >> go.mod
          go mod tidy
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          workdir: cmd
          version: latest
          args: release --rm-dist --skip-validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
